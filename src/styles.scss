@use 'sass:map';
@use '@angular/material' as mat;
@import '../node_modules/@angular/material/theming';
@import 'theme';
@import "assets/style/flags.css";

/* PrimeNG */
@import "../node_modules/primeng/resources/primeng.min.css";
@import "../node_modules/primeflex/primeflex.scss";
@import "../node_modules/primeicons/primeicons.css";

/* You can add global styles to this file, and also import other style files */


// To read color values from a theme, you can use the get-color-config Sass function. This function returns a Sass map
// containing the theme's primary, accent, and warn palettes, as well as a flag indicating whether dark mode is set.
$color-config: mat.get-color-config($my-theme);
$primary: map.get($color-config, 'primary');
$accent:  map.get($color-config, 'accent');
$warn:    map.get($color-config, 'warn');
$is-dark-theme:   map.get($color-config, 'is-dark');

// To read typography values from a theme, you can use the get-typography-config Sass function. See the Typography guide
// for more information about the typography config data structure and for APIs for reading values from this config.
$typography-config: mat.get-typography-config($my-theme);
$my-font-family: mat.font-family($typography-config);


body{
  background-color: mat.get-color-from-palette($primary, 100, 1);
}

// The following 4 blocks allow us to have the footer always at bottom even when there's no enough content on the page.
html, body {
  height: 100%;
}

app-root {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.main {
  flex: 1;
}

footer {
  margin-top: auto;
  height: 150px;
  width: 100%;
  color: white;
  bottom: 0;
  padding: 50px;
  background: mat-color($primary);
}

.p-message {
  margin: 1rem 0;
  border-radius: 4px;
}
.p-message .p-message-wrapper {
  padding: 1rem 1.5rem;
}
.p-message .p-message-close {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  background: transparent;
  transition: background-color 0.2s, color 0.2s, box-shadow 0.2s;
}
.p-message .p-message-close:hover {
  background: rgba(255, 255, 255, 0.3);
}
.p-message .p-message-close:focus {
  outline: 0 none;
  outline-offset: 0;
  box-shadow: 0 0 0 1px #a6e8f0;
}
.p-message.p-message-info {
  background: #B3E5FC;
  border: solid #0891cf;
  border-width: 0 0 0 6px;
  color: #044868;
}
.p-message.p-message-info .p-message-icon {
  color: #044868;
}
.p-message.p-message-info .p-message-close {
  color: #044868;
}
.p-message.p-message-success {
  background: #C8E6C9;
  border: solid #439446;
  border-width: 0 0 0 6px;
  color: #224a23;
}
.p-message.p-message-success .p-message-icon {
  color: #224a23;
}
.p-message.p-message-success .p-message-close {
  color: #224a23;
}
.p-message.p-message-warn {
  background: #FFECB3;
  border: solid #d9a300;
  border-width: 0 0 0 6px;
  color: #6d5100;
}
.p-message.p-message-warn .p-message-icon {
  color: #6d5100;
}
.p-message.p-message-warn .p-message-close {
  color: #6d5100;
}
.p-message.p-message-error {
  background: #FFCDD2;
  border: solid #e60017;
  border-width: 0 0 0 6px;
  color: #73000c;
}
.p-message.p-message-error .p-message-icon {
  color: #73000c;
}
.p-message.p-message-error .p-message-close {
  color: #73000c;
}
.p-message .p-message-text {
  font-size: 1rem;
  font-weight: 500;
}
.p-message .p-message-icon {
  font-size: 1.5rem;
  margin-right: 0.5rem;
}
.p-message .p-message-summary {
  font-weight: 700;
}
.p-message .p-message-detail {
  margin-left: 0.5rem;
}
